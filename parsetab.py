
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT COMMA DIVIDE DOLLAR EQUAL ID LPAREN L_CBRACES MINUS NUMBER PLUS RPAREN R_CBRACES SEMI_COLON TIMES do eq foreach goe great less loe until whilemain : StatementsStatements : Statement Statements\n                |   StatementStatement :  assign SEMI_COLON Statements\n                  | expression SEMI_COLON Statements\n                  | list SEMI_COLON Statements\n                  | do L_CBRACES Statements R_CBRACES while LPAREN COND RPAREN SEMI_COLON Statements\n                  | until LPAREN COND RPAREN L_CBRACES Statements R_CBRACES Statements\n                  | foreach DOLLAR ID LPAREN list RPAREN L_CBRACES Statements R_CBRACES Statements\n                  | declaration Statements\n                  | declaration : var_list SEMI_COLONvar_list : DOLLAR ID\n                | DOLLAR ID COMMA var_list\n                | DOLLAR ID EQUAL expression\n                | DOLLAR ID EQUAL expression COMMA var_listCOND : DOLLAR ID rel DOLLAR ID\n            | expression rel expression\n            | expression rel DOLLAR ID\n            | DOLLAR ID rel expressionrel : goe \n\t   | loe \n\t   | great \n\t   | less \n\t   | eq assign : DOLLAR ID EQUAL expressionexpression : expression PLUS term\n\t\t  | expression MINUS term\n\t\t  | expression TIMES term\n\t\t  | expression DIVIDE term\n\t\t  | LPAREN expression RPAREN\n\t\t  | termlist : AT ID term : NUMBER\n\t      | DOLLAR ID'
    
_lr_action_items = {'do':([0,3,12,17,18,19,24,25,31,33,34,35,40,64,80,82,85,87,88,89,90,],[7,7,7,-2,7,7,7,7,-10,-12,-4,-5,-6,7,7,7,-8,7,7,-7,-9,]),'until':([0,3,12,17,18,19,24,25,31,33,34,35,40,64,80,82,85,87,88,89,90,],[9,9,9,-2,9,9,9,9,-10,-12,-4,-5,-6,9,9,9,-8,9,9,-7,-9,]),'foreach':([0,3,12,17,18,19,24,25,31,33,34,35,40,64,80,82,85,87,88,89,90,],[10,10,10,-2,10,10,10,10,-10,-12,-4,-5,-6,10,10,10,-8,10,10,-7,-9,]),'DOLLAR':([0,3,8,10,12,17,18,19,20,21,22,23,24,25,28,31,33,34,35,40,48,49,53,54,55,56,57,58,64,65,69,71,78,80,82,85,87,88,89,90,],[11,11,27,29,11,-2,11,11,27,27,27,27,11,11,45,-10,-12,-4,-5,-6,27,61,67,-21,-22,-23,-24,-25,11,73,61,45,27,11,11,-8,11,11,-7,-9,]),'LPAREN':([0,3,8,9,12,17,18,19,24,25,28,31,33,34,35,40,47,48,53,54,55,56,57,58,63,64,65,71,78,80,82,85,87,88,89,90,],[8,8,8,28,8,-2,8,8,8,8,8,-10,-12,-4,-5,-6,59,8,8,-21,-22,-23,-24,-25,71,8,8,8,8,8,8,-8,8,8,-7,-9,]),'AT':([0,3,12,17,18,19,24,25,31,33,34,35,40,59,64,80,82,85,87,88,89,90,],[14,14,14,-2,14,14,14,14,-10,-12,-4,-5,-6,14,14,14,14,-8,14,14,-7,-9,]),'NUMBER':([0,3,8,12,17,18,19,20,21,22,23,24,25,28,31,33,34,35,40,48,53,54,55,56,57,58,64,65,71,78,80,82,85,87,88,89,90,],[16,16,16,16,-2,16,16,16,16,16,16,16,16,16,-10,-12,-4,-5,-6,16,16,-21,-22,-23,-24,-25,16,16,16,16,16,16,-8,16,16,-7,-9,]),'$end':([0,1,2,3,12,17,18,19,24,31,33,34,35,40,80,85,87,88,89,90,],[-11,0,-1,-3,-11,-2,-11,-11,-11,-10,-12,-4,-5,-6,-11,-8,-11,-11,-7,-9,]),'R_CBRACES':([3,12,17,18,19,24,25,31,33,34,35,40,41,64,72,80,82,85,86,87,88,89,90,],[-3,-11,-2,-11,-11,-11,-11,-10,-12,-4,-5,-6,50,-11,80,-11,-11,-8,88,-11,-11,-7,-9,]),'SEMI_COLON':([4,5,6,13,15,16,30,32,36,37,38,39,42,43,60,62,70,77,83,84,],[18,19,24,-32,33,-34,-13,-33,-27,-28,-29,-30,-31,-35,-15,-14,-13,-16,-15,87,]),'PLUS':([5,13,16,26,30,36,37,38,39,42,43,46,52,60,66,74,75,81,83,],[20,-32,-34,20,-35,-27,-28,-29,-30,-31,-35,20,-35,20,20,20,-35,-35,20,]),'MINUS':([5,13,16,26,30,36,37,38,39,42,43,46,52,60,66,74,75,81,83,],[21,-32,-34,21,-35,-27,-28,-29,-30,-31,-35,21,-35,21,21,21,-35,-35,21,]),'TIMES':([5,13,16,26,30,36,37,38,39,42,43,46,52,60,66,74,75,81,83,],[22,-32,-34,22,-35,-27,-28,-29,-30,-31,-35,22,-35,22,22,22,-35,-35,22,]),'DIVIDE':([5,13,16,26,30,36,37,38,39,42,43,46,52,60,66,74,75,81,83,],[23,-32,-34,23,-35,-27,-28,-29,-30,-31,-35,23,-35,23,23,23,-35,-35,23,]),'L_CBRACES':([7,51,76,],[25,64,82,]),'ID':([11,14,27,29,45,61,67,73,],[30,32,43,47,52,70,75,81,]),'RPAREN':([13,16,26,32,36,37,38,39,42,43,44,66,68,74,75,79,81,],[-32,-34,42,-33,-27,-28,-29,-30,-31,-35,51,-18,76,-20,-19,84,-17,]),'goe':([13,16,36,37,38,39,42,43,46,52,],[-32,-34,-27,-28,-29,-30,-31,-35,54,54,]),'loe':([13,16,36,37,38,39,42,43,46,52,],[-32,-34,-27,-28,-29,-30,-31,-35,55,55,]),'great':([13,16,36,37,38,39,42,43,46,52,],[-32,-34,-27,-28,-29,-30,-31,-35,56,56,]),'less':([13,16,36,37,38,39,42,43,46,52,],[-32,-34,-27,-28,-29,-30,-31,-35,57,57,]),'eq':([13,16,36,37,38,39,42,43,46,52,],[-32,-34,-27,-28,-29,-30,-31,-35,58,58,]),'COMMA':([13,16,30,36,37,38,39,42,43,60,70,83,],[-32,-34,49,-27,-28,-29,-30,-31,-35,69,49,69,]),'EQUAL':([30,70,],[48,78,]),'while':([50,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'Statements':([0,3,12,18,19,24,25,64,80,82,87,88,],[2,17,31,34,35,40,41,72,85,86,89,90,]),'Statement':([0,3,12,18,19,24,25,64,80,82,87,88,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'assign':([0,3,12,18,19,24,25,64,80,82,87,88,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,3,8,12,18,19,24,25,28,48,53,64,65,71,78,80,82,87,88,],[5,5,26,5,5,5,5,5,46,60,66,5,74,46,83,5,5,5,5,]),'list':([0,3,12,18,19,24,25,59,64,80,82,87,88,],[6,6,6,6,6,6,6,68,6,6,6,6,6,]),'declaration':([0,3,12,18,19,24,25,64,80,82,87,88,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'term':([0,3,8,12,18,19,20,21,22,23,24,25,28,48,53,64,65,71,78,80,82,87,88,],[13,13,13,13,13,13,36,37,38,39,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'var_list':([0,3,12,18,19,24,25,49,64,69,80,82,87,88,],[15,15,15,15,15,15,15,62,15,77,15,15,15,15,]),'COND':([28,71,],[44,79,]),'rel':([46,52,],[53,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> Statements','main',1,'p_main','parser.py',5),
  ('Statements -> Statement Statements','Statements',2,'p_Statements','parser.py',9),
  ('Statements -> Statement','Statements',1,'p_Statements','parser.py',10),
  ('Statement -> assign SEMI_COLON Statements','Statement',3,'p_Statement','parser.py',13),
  ('Statement -> expression SEMI_COLON Statements','Statement',3,'p_Statement','parser.py',14),
  ('Statement -> list SEMI_COLON Statements','Statement',3,'p_Statement','parser.py',15),
  ('Statement -> do L_CBRACES Statements R_CBRACES while LPAREN COND RPAREN SEMI_COLON Statements','Statement',10,'p_Statement','parser.py',16),
  ('Statement -> until LPAREN COND RPAREN L_CBRACES Statements R_CBRACES Statements','Statement',8,'p_Statement','parser.py',17),
  ('Statement -> foreach DOLLAR ID LPAREN list RPAREN L_CBRACES Statements R_CBRACES Statements','Statement',10,'p_Statement','parser.py',18),
  ('Statement -> declaration Statements','Statement',2,'p_Statement','parser.py',19),
  ('Statement -> <empty>','Statement',0,'p_Statement','parser.py',20),
  ('declaration -> var_list SEMI_COLON','declaration',2,'p_declaration','parser.py',23),
  ('var_list -> DOLLAR ID','var_list',2,'p_var_list','parser.py',26),
  ('var_list -> DOLLAR ID COMMA var_list','var_list',4,'p_var_list','parser.py',27),
  ('var_list -> DOLLAR ID EQUAL expression','var_list',4,'p_var_list','parser.py',28),
  ('var_list -> DOLLAR ID EQUAL expression COMMA var_list','var_list',6,'p_var_list','parser.py',29),
  ('COND -> DOLLAR ID rel DOLLAR ID','COND',5,'p_COND','parser.py',32),
  ('COND -> expression rel expression','COND',3,'p_COND','parser.py',33),
  ('COND -> expression rel DOLLAR ID','COND',4,'p_COND','parser.py',34),
  ('COND -> DOLLAR ID rel expression','COND',4,'p_COND','parser.py',35),
  ('rel -> goe','rel',1,'p_rel','parser.py',38),
  ('rel -> loe','rel',1,'p_rel','parser.py',39),
  ('rel -> great','rel',1,'p_rel','parser.py',40),
  ('rel -> less','rel',1,'p_rel','parser.py',41),
  ('rel -> eq','rel',1,'p_rel','parser.py',42),
  ('assign -> DOLLAR ID EQUAL expression','assign',4,'p_assign','parser.py',45),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',48),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',49),
  ('expression -> expression TIMES term','expression',3,'p_expression','parser.py',50),
  ('expression -> expression DIVIDE term','expression',3,'p_expression','parser.py',51),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',52),
  ('expression -> term','expression',1,'p_expression','parser.py',53),
  ('list -> AT ID','list',2,'p_list','parser.py',56),
  ('term -> NUMBER','term',1,'p_term','parser.py',59),
  ('term -> DOLLAR ID','term',2,'p_term','parser.py',60),
]
